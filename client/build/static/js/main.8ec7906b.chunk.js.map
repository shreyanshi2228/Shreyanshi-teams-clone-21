{"version":3,"sources":["components/UI/Header/Header.js","components/HomePage/HomePage.js","utils/apiRequests.js","utils/apiEndpoints.js","utils/helpers.js","components/UI/CallPageHeader/CallPageHeader.js","components/UI/CallPageFooter/CallPageFooter.js","components/UI/MeetingInfo/MeetingInfo.js","components/UI/Messenger/Messenger.js","reducers/MessageListReducer.js","components/UI/Alert/Alert.js","components/CallPage/CallPage.js","components/NoMatch/NoMatch.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","HomePage","history","useHistory","onClick","uid","shortid","generate","push","icon","faVideo","postRequest","url","a","payload","axios","post","then","resp","data","catch","err","error","response","getRequest","get","BASE_URL","process","formatDate","timestamp","moment","format","CallPageHeader","isMessenger","setIsMessenger","messageAlert","setMessageAlert","interval","useState","currentTime","setCurrentTime","useEffect","setInterval","clearInterval","faComment","alert","CallPageFooter","isPresenting","stopScreenShare","screenShare","isAudio","toggleAudio","disconnectCall","faMicrophone","faMicrophoneSlash","faPhone","faDesktop","MeetingInfo","setMeetInfoPopup","faTimes","faCopy","navigator","clipboard","writeText","Messenger","sendMsg","messageList","msg","setMsg","map","item","user","time","placeholder","value","onChange","e","target","handleChangeMsg","onKeyDown","key","handleKeyDown","faPaperPlane","MessageListReducer","state","action","draftState","type","Alert","peer","socket","io","connect","initialState","CallPage","id","useParams","isAdmin","window","location","hash","origin","pathname","alertTimeout","useReducer","messageListReducer","streamObj","setStreamObj","screenCastStream","setScreenCastStream","meetInfoPopup","setIsPresenting","setIsAudio","initWebRTC","on","signal","code","getRecieverCode","mediaDevices","getUserMedia","video","audio","stream","Peer","initiator","trickle","signalData","emit","cbData","console","log","clearTimeout","toString","Date","now","isPopup","setTimeout","document","querySelector","srcObject","URL","createObjectURL","play","controls","getVideoTracks","forEach","track","stop","replaceTrack","getDisplayMedia","cursor","screenStream","getTracks","onended","getAudioTracks","enabled","destroy","reload","send","NoMatch","to","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ec7906b.chunk.js","sourcesContent":["import './Header.scss';\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <div className=\"logo\">\n            <img src=\"https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE1Mu3b?ver=5c31\" />\n                <span className=\"help-text\">\n                    Teams\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVideo,} from \"@fortawesome/free-solid-svg-icons\";\nimport shortid from \"shortid\";\nimport Header from \"./../UI/Header/Header\";\nimport \"./HomePage.scss\";\n\nconst HomePage = () => {\n\n  const history = useHistory();\n\n  const startCall = () => {\n    const uid = shortid.generate();\n    history.push(`/${uid}#init`);\n  };\n\n    return (\n        <div className=\"home-page\">\n            <Header />\n            <div className=\"body\">\n                <div className=\"left-side\">\n                    <div className=\"content\">\n                        <h2>Microsoft Teams</h2>\n                        <p>\n                            Meet, chat, call, and collaborate in just one place.\n                        </p>\n                        <div className=\"action-btn\">\n              <button className=\"btn green\" onClick={startCall}>\n                <FontAwesomeIcon className=\"icon-block\" icon={faVideo} />\n                Meet Now\n              </button>\n              \n            </div>\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  );\n};\nexport default HomePage;\n","import axios from 'axios';\n\nexport const postRequest = async (url, payload = {}) => {\n    const data = await axios.post(url, payload)\n        .then(resp => resp.data)\n        .catch(err => (\n            { error: err.response.data }\n        ));\n    return data;\n}\n\nexport const putRequest = async (url, payload = {}) => {\n    const data = await axios.put(url, payload)\n        .then(resp => resp.data)\n        .catch(err => (\n            { error: err.response.data }\n        ));\n    return data;\n}\n\nexport const getRequest = async (url) => {\n    const data = await axios.get(url)\n        .then(resp => resp.data)\n        .catch(err => (\n            { error: err.response.data }\n        ));\n    return data;\n}\n\nexport const deleteRequest = async (url) => {\n    const data = await axios.delete(url)\n        .then(resp => resp.data)\n        .catch(err => (\n            { error: err.response.data }\n        ));\n    return data;\n}\n","export const BASE_URL = process.env.REACT_APP_BASE_URL;\nexport const SAVE_CALL_ID = \"/api/save-call-id\";\nexport const GET_CALL_ID = \"/api/get-call-id\";","import moment from 'moment';\n\nexport const formatDate = (timestamp) => {\n    return moment(timestamp).format(\"h:mm A\");  \n}","import { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faComment\n  } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./CallPageHeader.scss\";\nimport { formatDate } from \"./../../../utils/helpers\";\n\n\nconst CallPageHeader = ({\n    isMessenger,\n    setIsMessenger,\n    messageAlert,\n    setMessageAlert,\n  }) => {\n    let interval = null;\n    const [currentTime, setCurrentTime] = useState(() => {\n      return formatDate();\n    });\n  \n    useEffect(() => {\n      interval = setInterval(() => setCurrentTime(formatDate()), 1000);\n      return () => {\n        clearInterval(interval);\n      };\n    }, []);\n    return (\n        <div className=\"frame-header\">\n          <div\n            className=\"header-items icon-block\"\n            onClick={() => {\n              setIsMessenger(true);\n              setMessageAlert({});\n            }}\n          >\n            <FontAwesomeIcon className=\"icon\" icon={faComment} />\n            {!isMessenger && messageAlert.alert && (\n              <span className=\"alert-circle-icon\"></span>\n            )}\n          </div>\n          <div className=\"header-items date-block\">{currentTime}</div>\n        </div>\n      );\n    };\n    \n    export default CallPageHeader;\n    ","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMicrophone,\n  faPhone,\n  faDesktop,\n  faMicrophoneSlash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./CallPageFooter.scss\";\n\nconst CallPageFooter = ({\n  isPresenting,\n  stopScreenShare,\n  screenShare,\n  isAudio,\n  toggleAudio,\n  disconnectCall,\n}) => {\n  return (\n    <div className=\"footer-item\">\n      <div className=\"left-item\">\n      </div>\n      <div className=\"center-item\">\n        <div\n          className={`icon-block ${!isAudio ? \"red-bg\" : null}`}\n          onClick={() => toggleAudio(!isAudio)}\n        >\n          <FontAwesomeIcon\n            className=\"icon\"\n            icon={isAudio ? faMicrophone : faMicrophoneSlash}\n          />\n        </div>\n        <div className=\"icon-block\" onClick={disconnectCall}>\n          <FontAwesomeIcon className=\"icon red\" icon={faPhone} />\n        </div>\n      </div>\n      <div className=\"right-item\">\n        {isPresenting ? (\n          <div className=\"icon-block\" onClick={stopScreenShare}>\n            <FontAwesomeIcon className=\"icon red\" icon={faDesktop} />\n            <p className=\"title\">Stop presenting</p>\n          </div>\n        ) : (\n          <div className=\"icon-block\" onClick={screenShare}>\n            <FontAwesomeIcon className=\"icon red\" icon={faDesktop} />\n            <p className=\"title\">Share your screen!</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CallPageFooter;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCopy,\n  faTimes\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./MeetingInfo.scss\";\n\nconst MeetingInfo = ({ setMeetInfoPopup, url }) => {\n  return (\n    <div className=\"meeting-info-block\">\n      <div className=\"meeting-header\">\n        <h3>Your meeting's Link!</h3>\n        <FontAwesomeIcon\n          className=\"icon\"\n          icon={faTimes}\n          onClick={() => {\n            setMeetInfoPopup(false);\n          }}\n        />\n      </div>\n      <div className=\"meet-link\">\n        <span>{url}</span>\n        <FontAwesomeIcon className=\"icon\"  icon={faCopy}\n          onClick={() => navigator.clipboard.writeText(url)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MeetingInfo;","import { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimes,\n  faPaperPlane,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Messenger.scss\";\nimport { formatDate } from \"./../../../utils/helpers\";\n\nconst Messenger = ({ setIsMessenger, sendMsg, messageList }) => {\n  const [msg, setMsg] = useState(\"\");\n\n  const handleChangeMsg = (e) => {\n    setMsg(e.target.value);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      sendMsg(msg);\n      setMsg(\"\");\n    }\n  };\n\n  const handleSendMsg = () => {\n    sendMsg(msg);\n    setMsg(\"\");\n  };\n\n  return (\n    <div className=\"messenger-container\">\n      <div className=\"messenger-header\">\n        <h3>Meeting chat</h3>\n        <FontAwesomeIcon\n          className=\"icon\"\n          icon={faTimes}\n          onClick={() => {\n            setIsMessenger(false);\n          }}\n        />\n      </div>\n\n\n      <div className=\"chat-section\">\n        {messageList.map((item) => (\n          <div key={item.time} className=\"chat-block\">\n            <div className=\"sender\">\n              {item.user} <small>{formatDate(item.time)}</small>\n            </div>\n            <p className=\"msg\">{item.msg}</p>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"send-msg-section\">\n        <input\n          placeholder=\"Type your message here!\"\n          value={msg}\n          onChange={(e) => handleChangeMsg(e)}\n          onKeyDown={(e) => handleKeyDown(e)}\n        />\n        <FontAwesomeIcon\n          className=\"icon\"\n          icon={faPaperPlane}\n          onClick={handleSendMsg}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Messenger;\n","const MessageListReducer = (state, action) => {\n    let draftState = [...state];\n    switch (action.type) {\n      case \"addMessage\":\n        return [...draftState, action.payload];\n      default:\n        return state;\n    }\n  };\n  \n  export default MessageListReducer;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComment} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Alert.scss\";\n\nconst Alert = ({ messageAlert }) => {\n  return (\n    <div className=\"message-alert-popup\">\n      <div className=\"alert-header\">\n        <FontAwesomeIcon className=\"icon\" icon={faComment} />\n        <h3>{messageAlert.payload.user}</h3>\n      </div>\n      <p className=\"alert-msg\">{messageAlert.payload.msg}</p>\n    </div>\n  );\n};\n\nexport default Alert;\n","import { useEffect, useState, useReducer } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { getRequest, postRequest } from \"./../../utils/apiRequests\";\nimport {\n    BASE_URL,\n    GET_CALL_ID,\n    SAVE_CALL_ID,\n} from \"./../../utils/apiEndpoints\";\nimport io from \"socket.io-client\";\nimport CallPageHeader from \"../UI/CallPageHeader/CallPageHeader\";\nimport CallPageFooter from \"../UI/CallPageFooter/CallPageFooter\";\nimport MeetingInfo from \"../UI/MeetingInfo/MeetingInfo\";\nimport Messenger from \"./../UI/Messenger/Messenger\";\nimport MessageListReducer from \"../../reducers/MessageListReducer\";\nimport Alert from \"../UI/Alert/Alert\";\nimport Peer from \"simple-peer\";\n\nimport './CallPage.scss';\n\nlet peer = null;\nconst socket = io.connect(process.env.REACT_APP_BASE_URL); \nconst initialState = [];\n\nconst CallPage = () => {\n    const history = useHistory();\n    let { id } = useParams();\n    const isAdmin = window.location.hash == \"#init\" ? true : false;\n    const url = `${window.location.origin}${window.location.pathname}`;\n    let alertTimeout = null;\n\n    const [messageList, messageListReducer] = useReducer(\n        MessageListReducer,\n        initialState\n    );\n\n    const [streamObj, setStreamObj] = useState();\n    const [screenCastStream, setScreenCastStream] = useState();\n    const [meetInfoPopup, setMeetInfoPopup] = useState(false);\n    const [isPresenting, setIsPresenting] = useState(false);\n    const [isMessenger, setIsMessenger] = useState(false);\n    const [messageAlert, setMessageAlert] = useState({});\n    const [isAudio, setIsAudio] = useState(true);\n\n    useEffect(() => {\n        if (isAdmin) {\n            setMeetInfoPopup(true);\n        }\n        initWebRTC();\n        socket.on(\"code\", (data) => {\n            if(data.url === url){\n                peer.signal(data.code);\n            }\n        });\n    }, []);\n\n    const getRecieverCode = async () => {\n        const response = await getRequest(`${BASE_URL}${GET_CALL_ID}/${id}`);\n        if (response.code) {\n            peer.signal(response.code);\n        }\n    };\n\n    const initWebRTC = () => {\n        navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: true,\n        })\n\n            .then((stream) => {\n                setStreamObj(stream);\n                peer = new Peer({\n                    initiator: isAdmin,\n                    trickle: false,\n                    stream: stream,\n                });\n\n                if (!isAdmin) {\n                    getRecieverCode();\n                }\n\n                peer.on(\"signal\", async (data) => {\n                    if (isAdmin) {\n                        let payload = {\n                            id,\n                            signalData: data,\n                        };\n                        await postRequest(`${BASE_URL}${SAVE_CALL_ID}`, payload);\n                    } else {\n                        socket.emit(\"code\", {code: data, url}, (cbData) => {\n                            console.log(\"code sent\");\n                          });\n                    }\n                });\n\n                peer.on(\"connect\", () => {\n                    console.log(\"peer connected\");\n                });\n\n                peer.on(\"data\", (data) => {\n                    clearTimeout(alertTimeout);\n                    messageListReducer({\n                        type: \"addMessage\",\n                        payload: {\n                            user: \"other\",\n                            msg: data.toString(),\n                            time: Date.now(),\n                        },\n                    });\n\n                    setMessageAlert({\n                        alert: true,\n                        isPopup: true,\n                        payload: {\n                            user: \"other\",\n                            msg: data.toString(),\n                        },\n                    });\n\n                    alertTimeout = setTimeout(() => {\n                        setMessageAlert({\n                            ...messageAlert,\n                            isPopup: false,\n                            payload: {},\n                        });\n                    }, 10000);\n                });\n\n\n                peer.on(\"stream\", (stream) => {\n                    // got remote video stream, now let's show it in a video tag\n                    let video = document.querySelector(\"video\");\n\n                    if (\"srcObject\" in video) {\n                        video.srcObject = stream;\n                    } else {\n                        video.src = window.URL.createObjectURL(stream); // for older browsers\n                    }\n\n                    video.play();\n                });\n\n            })\n            .catch(() => {\n                console.log(\"error\");\n            });\n\n    };\n\n    const screenShare = () => {\n        navigator.mediaDevices\n            .getDisplayMedia({ cursor: true })\n            .then((screenStream) => {\n                peer.replaceTrack(\n                    streamObj.getVideoTracks()[0],\n                    screenStream.getVideoTracks()[0],\n                    streamObj\n                );\n                setScreenCastStream(screenStream);\n                screenStream.getTracks()[0].onended = () => {\n                    peer.replaceTrack(\n                        screenStream.getVideoTracks()[0],\n                        streamObj.getVideoTracks()[0],\n                        streamObj\n                    );\n                };\n                setIsPresenting(true);\n            });\n    };\n\n    const sendMsg = (msg) => {\n        peer.send(msg);\n        messageListReducer({\n            type: \"addMessage\",\n            payload: {\n                user: \"you\",\n                msg: msg,\n                time: Date.now(),\n            },\n        });\n    };\n\n    const stopScreenShare = () => {\n        screenCastStream.getVideoTracks().forEach(function (track) {\n            track.stop();\n        });\n        peer.replaceTrack(\n            screenCastStream.getVideoTracks()[0],\n            streamObj.getVideoTracks()[0],\n            streamObj\n        );\n        setIsPresenting(false);\n    };\n\n    const toggleAudio = (value) => {\n        streamObj.getAudioTracks()[0].enabled = value;\n        setIsAudio(value);\n    };\n\n    const disconnectCall = () => {\n        peer.destroy();\n        history.push(\"/\");\n        window.location.reload();\n    };\n\n\n    return (\n        <div className=\"callpage-container\">\n            <video className=\"video-container\" src=\"\" controls></video>\n\n            <CallPageHeader\n                isMessenger={isMessenger}\n                setIsMessenger={setIsMessenger}\n                messageAlert={messageAlert}\n                setMessageAlert={setMessageAlert}\n            />\n            <CallPageFooter\n                isPresenting={isPresenting}\n                stopScreenShare={stopScreenShare}\n                screenShare={screenShare}\n                isAudio={isAudio}\n                toggleAudio={toggleAudio}\n                disconnectCall={disconnectCall}\n            />\n            {isAdmin && meetInfoPopup && (\n                <MeetingInfo setMeetInfoPopup={setMeetInfoPopup} url={url} />\n            )}\n            {isMessenger ? (\n                <Messenger\n                    setIsMessenger={setIsMessenger}\n                    sendMsg={sendMsg}\n                    messageList={messageList}\n                />\n            ) : (\n                messageAlert.isPopup && <Alert messageAlert={messageAlert} />\n            )}\n        </div>\n    );\n};\nexport default CallPage;\n","import { Link } from \"react-router-dom\";\nimport \"./NoMatch.scss\";\n\nconst NoMatch = () => {\n  return (\n    <div className=\"no-match\">\n      <div className=\"content\">\n        <h2>Invalid video call link.</h2>\n        <div className=\"action-btn\">\n          <Link className=\"btn white\" to=\"/\">\n            Click here to return to home screen!\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default NoMatch;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport CallPage from \"./components/CallPage/CallPage\";\nimport NoMatch from \"./components/NoMatch/NoMatch\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/:id\">\n          <CallPage />\n        </Route>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route path=\"*\">\n          <NoMatch />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}